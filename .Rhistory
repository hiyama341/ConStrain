filter(!(is.na(Amt_uM_Loganin) & is.na(Amt_uM_Secologanin) & is.na(Amt_uM_Strictosidine) &   is.na(Amt_uM_Tryptamine))) %>%
#filter_at(vars(Amt_uM_Loganin, Amt_uM_Secologanin, Amt_uM_Strictosidine, Amt_uM_Tryptamine),any_vars(!is.na(.))) %>%
# Excel contains values both in ug and uM. Ill use uM because values are in a better scale.
# remove cols starting with "Amt_ug_L_" because of redundancy and uM has better scale.
select(!starts_with("Amt_ug_L_"), -X8,-X11, -data_file, -description) %>%
#fix 210330 sample_notes column
mutate(sample_notes = gsub("*(_P[12])*","",sample_notes)) %>%
separate(sample_notes,  sep = "_", into = c('plate','well')) %>%
arrange(plate, well) %>%
# make tmet494 no feed vs feed
mutate(medium = ifelse(plate=="96WP988","nofeed",
ifelse(plate=="96WP989","feed","NA"))) %>%
# fix plate column
mutate(plate = gsub("96WP","",plate),
plate = gsub("1056","YP49",plate),
plate = gsub("988|989","YP48",plate),
plate = gsub("YP","yp",plate)) %>%
# str pad well column
mutate(row = str_extract(well, "^([a-zA-Z])"),
col = str_extract(well, "([0-9]+)$"),
col = str_pad(col, width=2, pad = "0"),
well = str_c(row,col,"")) %>%
select(-row,-col) %>%
# replace na's with 0
mutate(
across(starts_with("Amt"), ~replace_na(.x, 0))
)
#1. In Emacs; Result_table_210330_tmet494_Soren.xlsx to .csv N.D. -> N.A.; N.A. -> NA.
#2. Change names to plates names e.g.Result_table_210330_tmet494_Soren.csv -> Result_table_210330_tmet494_yp48Feed-Nofeed.xlsx
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
unnest(data) %>%
select(-abs_path, -a, -b) %>%
# filter standards
filter(!grepl("*_v13*", sample_notes)) %>%
# filter not acquired
filter(!(is.na(Amt_uM_Loganin) & is.na(Amt_uM_Secologanin) & is.na(Amt_uM_Strictosidine) &   is.na(Amt_uM_Tryptamine))) %>%
#filter_at(vars(Amt_uM_Loganin, Amt_uM_Secologanin, Amt_uM_Strictosidine, Amt_uM_Tryptamine),any_vars(!is.na(.))) %>%
# Excel contains values both in ug and uM. Ill use uM because values are in a better scale.
# remove cols starting with "Amt_ug_L_" because of redundancy and uM has better scale.
select(!starts_with("Amt_ug_L_"), -X8,-X11, -data_file, -description) %>%
#fix 210330 sample_notes column
mutate(sample_notes = gsub("*(_P[12])*","",sample_notes)) %>%
separate(sample_notes,  sep = "_", into = c('plate','well')) %>%
arrange(plate, well) %>%
# make tmet494 no feed vs feed
mutate(medium = ifelse(plate=="96WP988","nofeed",
ifelse(plate=="96WP989","feed","NA"))) %>%
# fix plate column
mutate(plate = gsub("96WP","",plate),
plate = gsub("1056","YP49",plate),
plate = gsub("988|989","YP48",plate),
plate = gsub("YP","yp",plate)) %>%
# str pad well column
mutate(row = str_extract(well, "^([a-zA-Z])"),
col = str_extract(well, "([0-9]+)$"),
col = str_pad(col, width=2, pad = "0"),
well = str_c(row,col,"")) %>%
select(-row,-col) %>%
# replace na's with 0
mutate(
across(starts_with("Amt"), ~replace_na(.x, 0))
)
#Merge yp48-52 metadata into single csv file
LCMS="$HOME/projects/g8h_cpr_library/data/raw/023_LC-MS"
procLCMS="$HOME/projects/g8h_cpr_library/data/processed/023_LC-MS"
```{r echo=FALSE, message=FALSE, include=FALSE}
#1. In Emacs; Result_table_210330_tmet494_Soren.xlsx to .csv N.D. -> N.A.; N.A. -> NA.
#2. Change names to plates names e.g.Result_table_210330_tmet494_Soren.csv -> Result_table_210330_tmet494_yp48Feed-Nofeed.xlsx
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
unnest(data) %>%
select(-abs_path, -a, -b) %>%
# filter standards
filter(!grepl("*_v13*", sample_notes)) %>%
# filter not acquired
filter(!(is.na(Amt_uM_Loganin) & is.na(Amt_uM_Secologanin) & is.na(Amt_uM_Strictosidine) &   is.na(Amt_uM_Tryptamine))) %>%
#filter_at(vars(Amt_uM_Loganin, Amt_uM_Secologanin, Amt_uM_Strictosidine, Amt_uM_Tryptamine),any_vars(!is.na(.))) %>%
# Excel contains values both in ug and uM. Ill use uM because values are in a better scale.
# remove cols starting with "Amt_ug_L_" because of redundancy and uM has better scale.
select(!starts_with("Amt_ug_L_"), -X8,-X11, -data_file, -description) %>%
#fix 210330 sample_notes column
mutate(sample_notes = gsub("*(_P[12])*","",sample_notes)) %>%
separate(sample_notes,  sep = "_", into = c('plate','well')) %>%
arrange(plate, well) %>%
# make tmet494 no feed vs feed
mutate(medium = ifelse(plate=="96WP988","nofeed",
ifelse(plate=="96WP989","feed","NA"))) %>%
# fix plate column
mutate(plate = gsub("96WP","",plate),
plate = gsub("1056","YP49",plate),
plate = gsub("988|989","YP48",plate),
plate = gsub("YP","yp",plate)) %>%
# str pad well column
mutate(row = str_extract(well, "^([a-zA-Z])"),
col = str_extract(well, "([0-9]+)$"),
col = str_pad(col, width=2, pad = "0"),
well = str_c(row,col,"")) %>%
select(-row,-col) %>%
# replace na's with 0
mutate(
across(starts_with("Amt"), ~replace_na(.x, 0))
)
#Merge yp48-52 metadata into single csv file
LCMS="$HOME/projects/g8h_cpr_library/data/raw/023_LC-MS"
procLCMS="$HOME/projects/g8h_cpr_library/data/processed/023_LC-MS"
# convert from xls with tabs to single csv files
ssconvert "$LCMS/plateDesign_yp48-51_MIA-HA-1-17_21-100.xls" "$LCMS/plateDesign.csv" --export-file-per-sheet
mv "$LCMS/plateDesign.csv.0" "$LCMS/yp50.csv"
mv "$LCMS/plateDesign.csv.1" "$LCMS/yp51.csv"
mv "$LCMS/plateDesign.csv.2" "$LCMS/yp49.csv"
mv "$LCMS/plateDesign.csv.3" "$LCMS/yp48.csv"
mv "$LCMS/plateDesign.csv.4" "$LCMS/yp52.csv"
# Add fbname as column in csv
for f in "$LCMS/yp48.csv" "$LCMS/yp49.csv" "$LCMS/yp50.csv" "$LCMS/yp51.csv" "$LCMS/yp52.csv"
do
fbname=$(basename "$f" .csv)
gawk -v d="$fbname" -F"," 'BEGIN {OFS = ","} {$13=d; print}' $f > "$LCMS/Plate$fbname.csv"
done
# Read into R
meta <- read_csv(here("data/processed/023_LC-MS/yp48-52_meta.csv")) %>%
select(plate, well = position, Strain, col_no = `Replicate #`, genotype,medium = Medium) %>%
mutate(Strain = gsub("MIA-","",Strain),
genotype = gsub("CPR","",genotype),
genotype = gsub("G8H","",genotype))
```{r, echo = FALSE, include=FALSE}
# Read into R
meta <- read_csv(here("data/processed/023_LC-MS/yp48-52_meta.csv")) %>%
select(plate, well = position, Strain, col_no = `Replicate #`, genotype,medium = Medium) %>%
mutate(Strain = gsub("MIA-","",Strain),
genotype = gsub("CPR","",genotype),
genotype = gsub("G8H","",genotype))
View(meta)
```{r,  echo = FALSE, include=FALSE}
results_meta <- meta %>%
left_join(results, by=c("plate","well")) %>%
mutate(strain = str_c(Strain,well, str_replace_na(genotype), str_replace_na(col_no), sep="_"),
Strain = str_c(Strain, str_replace_na(genotype), sep="_")) %>%
mutate(medium = ifelse(plate == "yp48", medium.y, medium.x)) %>%
select(-medium.y,-medium.x)
results_meta <- meta
View(results_meta)
View(results_meta)
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))
View(results)
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_")
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_")
to plates names e.g.Result_table_210330_tmet494_Soren.csv -> Result_table_210330_tmet494_yp48Feed-Nofeed.xlsx
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date)
View(results)
View(results)
to plates names e.g.Result_table_210330_tmet494_Soren.csv -> Result_table_210330_tmet494_yp48Feed-Nofeed.xlsx
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
unnest(data) %>%
select(-abs_path, -a, -b)
rlang::last_error()
knitr::opts_chunk$set(dev = c('pdf','png'), fig.path='../reports/figures/', fig.align = 'center') #, fig.height = 4, fig.width = 4, fig.cap = " " cache=TRUE,
knitr::opts_chunk$set(dev = c('pdf','png'), fig.path='../reports/figures/', fig.align = 'center') #, fig.height = 4, fig.width = 4, fig.cap = " " cache=TRUE,
```{r, echo=FALSE, include=FALSE, include=FALSE}
library(tidyverse)
library(here)
theme_set(theme_classic(20))
library(tidyverse)
library(here)
theme_set(theme_classic(20))
# Used promoters
```{r echo=TRUE, fig.height=5, fig.width=7.5, message=FALSE}
level_key <- c(`1` = "high", `2` = "high_low", `3` = "low_high", `4` = "low")
promoters <- "data/raw/promoters.csv" %>%
here() %>%
read_csv()
promoters_long <- promoters %>%
mutate(NIL_6h_FPKM_freq = NIL_6h_FPKM/sum(NIL_6h_FPKM),
NIL_12h_FPKM_freq = NIL_12h_FPKM/sum(NIL_12h_FPKM),
NIL_24h_FPKM_freq = NIL_24h_FPKM/sum(NIL_24h_FPKM))  %>%
#select(- sequence_5_to_3,-no_name,-number,-id,-sys_name,-length)
select(no_by_pos, position, name, id,NIL_6h_FPKM, NIL_12h_FPKM, NIL_24h_FPKM) %>%
#select(no_by_pos, position, name, id, NIL_6h_FPKM_freq, NIL_12h_FPKM_freq, NIL_24h_FPKM_freq) %>%
`colnames<-`(c("no_by_pos", "position", "name", "id", "6", "12", "24")) %>%
pivot_longer(
cols = `6`:`24`,
names_to = "sampling_time",
values_to = "mRNA_count",
values_drop_na = TRUE) %>%
mutate(sampling_hour = as.numeric(sampling_time),
no_by_pos = as.character(no_by_pos),
by_pos = recode(no_by_pos, !!!level_key))
p_promoters <- promoters_long %>%
ggplot() +
geom_line(aes(x=sampling_hour, y = mRNA_count, color = name)) +
facet_grid(.~position) +
#scale_colour_manual(values = c("red", "blue", "green", "purple","red", "blue", "green", "purple")) +
scale_colour_manual(values = c("orangered1", "orangered3", "seagreen1", "darkorchid1","darkorchid3", "deepskyblue1", "seagreen3", "deepskyblue3")) +
scale_x_continuous(breaks = c(6,12,24))
p_promoters
p_promoters
# Analytics
## Data wrangling
```{r echo=FALSE, message=FALSE, include=FALSE}
#1. In Emacs; Result_table_210330_tmet494_Soren.xlsx to .csv N.D. -> N.A.; N.A. -> NA.
#2. Change names to plates names e.g.Result_table_210330_tmet494_Soren.csv -> Result_table_210330_tmet494_yp48Feed-Nofeed.xlsx
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
unnest(data) %>%
select(-abs_path, -a, -b) %>%
# filter standards
filter(!grepl("*_v13*", sample_notes)) %>%
# filter not acquired
filter(!(is.na(Amt_uM_Loganin) & is.na(Amt_uM_Secologanin) & is.na(Amt_uM_Strictosidine) &   is.na(Amt_uM_Tryptamine))) %>%
#filter_at(vars(Amt_uM_Loganin, Amt_uM_Secologanin, Amt_uM_Strictosidine, Amt_uM_Tryptamine),any_vars(!is.na(.))) %>%
# Excel contains values both in ug and uM. Ill use uM because values are in a better scale.
# remove cols starting with "Amt_ug_L_" because of redundancy and uM has better scale.
select(!starts_with("Amt_ug_L_"), -X8,-X11, -data_file, -description) %>%
#fix 210330 sample_notes column
mutate(sample_notes = gsub("*(_P[12])*","",sample_notes)) %>%
separate(sample_notes,  sep = "_", into = c('plate','well')) %>%
arrange(plate, well) %>%
# make tmet494 no feed vs feed
mutate(medium = ifelse(plate=="96WP988","nofeed",
ifelse(plate=="96WP989","feed","NA"))) %>%
# fix plate column
mutate(plate = gsub("96WP","",plate),
plate = gsub("1056","YP49",plate),
plate = gsub("988|989","YP48",plate),
plate = gsub("YP","yp",plate)) %>%
# str pad well column
mutate(row = str_extract(well, "^([a-zA-Z])"),
col = str_extract(well, "([0-9]+)$"),
col = str_pad(col, width=2, pad = "0"),
well = str_c(row,col,"")) %>%
select(-row,-col) %>%
# replace na's with 0
mutate(
across(starts_with("Amt"), ~replace_na(.x, 0))
)
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results <- read.csv(file = 'ConStrain/data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv')
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results <- read.csv(file = '/data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv')
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results <- read.csv(file = 'processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv')
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results <- read.csv(file = '/data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv')
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results <- read.csv(file = '/data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv')
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results <- read.csv(here('/data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv'))
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results <- read.csv(here("/data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv"))
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results1 <- read.csv(here("/data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv"))
### TRYING TO INTEGRATE THE FILE DIRECTLY LL
results1 <- read_csv(here("data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv"))
View(results1)
### TRYING TO INTEGRATE THE FILE DIRECTLY LL - quick workaround
results1 <- read_csv(here("data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv"))
### TRYING TO INTEGRATE THE FILE DIRECTLY LL - quick workaround
results <- read_csv(here("data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv"))
results_meta <- meta %>%
left_join(results, by=c("plate","well")) %>%
mutate(strain = str_c(Strain,well, str_replace_na(genotype), str_replace_na(col_no), sep="_"),
Strain = str_c(Strain, str_replace_na(genotype), sep="_")) %>%
mutate(medium = ifelse(plate == "yp48", medium.y, medium.x)) %>%
select(-medium.y,-medium.x)
results_meta <- meta %>%
left_join(results, by=c("plate","well"))
View(results)
View(results_meta)
View(results_meta)
View(results_meta)
```{r echo=FALSE, message=FALSE, include=FALSE}
#1. In Emacs; Result_table_210330_tmet494_Soren.xlsx to .csv N.D. -> N.A.; N.A. -> NA.
#2. Change names to plates names e.g.Result_table_210330_tmet494_Soren.csv -> Result_table_210330_tmet494_yp48Feed-Nofeed.xlsx
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
unnest(data) %>%
select(-abs_path, -a, -b) %>%
# filter standards
filter(!grepl("*_v13*", sample_notes)) %>%
# filter not acquired
filter(!(is.na(Amt_uM_Loganin) & is.na(Amt_uM_Secologanin) & is.na(Amt_uM_Strictosidine) &   is.na(Amt_uM_Tryptamine))) %>%
#filter_at(vars(Amt_uM_Loganin, Amt_uM_Secologanin, Amt_uM_Strictosidine, Amt_uM_Tryptamine),any_vars(!is.na(.))) %>%
# Excel contains values both in ug and uM. Ill use uM because values are in a better scale.
# remove cols starting with "Amt_ug_L_" because of redundancy and uM has better scale.
select(!starts_with("Amt_ug_L_"), -X8,-X11, -data_file, -description) %>%
#fix 210330 sample_notes column
mutate(sample_notes = gsub("*(_P[12])*","",sample_notes)) %>%
separate(sample_notes,  sep = "_", into = c('plate','well')) %>%
arrange(plate, well) %>%
# make tmet494 no feed vs feed
mutate(medium = ifelse(plate=="96WP988","nofeed",
ifelse(plate=="96WP989","feed","NA"))) %>%
# fix plate column
mutate(plate = gsub("96WP","",plate),
plate = gsub("1056","YP49",plate),
plate = gsub("988|989","YP48",plate),
plate = gsub("YP","yp",plate)) %>%
# str pad well column
mutate(row = str_extract(well, "^([a-zA-Z])"),
col = str_extract(well, "([0-9]+)$"),
col = str_pad(col, width=2, pad = "0"),
well = str_c(row,col,"")) %>%
select(-row,-col) %>%
# replace na's with 0
mutate(
across(starts_with("Amt"), ~replace_na(.x, 0))
)
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path)))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_")
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
unnest(data) %>%
select(-abs_path, -a, -b) %>%
# filter standards
filter(!grepl("*_v13*", sample_notes)) %>%
# filter not acquired
filter(!(is.na(Amt_uM_Loganin) & is.na(Amt_uM_Secologanin) & is.na(Amt_uM_Strictosidine) &   is.na(Amt_uM_Tryptamine)))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
unnest(data) %>%
select(-abs_path, -a, -b) %>%
# filter standards
filter(!grepl("*_v13*", sample_notes))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
unnest(data)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3) %§%
unnest(data)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3) %>%
unnest(data)
View(results)
View(results)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path)))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_")
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv))
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3)
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3)
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3)
results$data
results$data[[1]]
results$data[[2]]
results$data[[3]]
```{r}
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(3) %>%
unnest(data)
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(2) %>%
unnest(data)
results <- tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(2)
results$data[[1]]
results$data[[2]]
tibble(abs_path = list.files(here("data","raw","023_LC-MS"), full.names = TRUE, pattern = ".csv"))  %>%
mutate(filename = tools::file_path_sans_ext(basename(abs_path))) %>%
separate(filename, into=c("a","b","date","tmetab","description"), sep="_") %>%
arrange(date) %>%
mutate(data = map(abs_path,read_csv)) %>%
head(2) %>%
unnest(data)
results$data[[1]]
results$data[[2]]
meta <- read_csv(here("data/processed/023_LC-MS/yp48-52_meta.csv")) %>%
select(plate, well = position, Strain, col_no = `Replicate #`, genotype, medium = Medium) %>%
mutate(Strain = gsub("MIA-","",Strain),
genotype = gsub("CPR","",genotype),
genotype = gsub("G8H","",genotype))
read_csv(here("data/processed/023_LC-MS/yp48-52_meta.csv"))
read_csv(here("data/processed/023_LC-MS/yp48-52_meta.csv"))
read_csv(here("data/processed/023_LC-MS/yp48-52_meta.csv")) %>%
select(plate, well = position, Strain, col_no = `Replicate #`, genotype, medium = Medium)
read_csv(here("data/processed/023_LC-MS/yp48-52_meta.csv")) %>%
select(plate, well = position, Strain, col_no = `Replicate #`, genotype, medium = Medium) %>%
mutate(Strain = gsub("MIA-","",Strain),
genotype = gsub("CPR","",genotype),
genotype = gsub("G8H","",genotype))
### TRYING TO INTEGRATE THE FILE DIRECTLY LL - quick workaround
results <- read_csv(here("data/processed/023_LC-MS/Result_table_210330_tmet494_yp48Feed-Nofeed.csv"))
read_csv(here("data/processed/023_LC-MS/yp48-52_meta.csv")) %>%
select(plate, well = position, Strain, col_no = `Replicate #`, genotype, medium = Medium)
meta
results
meta
results
meta %>%
left_join(results, by=c("plate","well"))
